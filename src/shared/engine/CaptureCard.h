// Generated by dia2code
#ifndef ENGINE__CAPTURECARD__H
#define ENGINE__CAPTURECARD__H

#include <vector>

namespace engine {
  class Engine;
};
namespace state {
  class Player;
};
namespace engine {
  class Command;
}

#include "Command.h"

namespace engine {

  /// class CaptureCard - 
  class CaptureCard : public engine::Command {
    // Attributes
  public:
    int indexCardHand;
    std::vector<int> indexsCardsBoard;
    // Operations
  public:
    CaptureCard (int indexCardHand, std::vector<int> indexsCardFromBoard);
    ~CaptureCard ();
    bool execute (Engine* engine);
  private:
    bool validateCardHand (int indexCard, int maxIndex);
    bool validateCardBoard (std::vector<int> indexsCards, int maxIndex);
    bool verifyChkoba (state::GameBoard board);
    void collectMultipleCard (state::GameBoard & board, std::vector<int> collectedCardIndexs, state::Player & player);
    // Setters and Getters
  };

};

#endif
