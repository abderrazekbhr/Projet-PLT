# Workflow to build, test, and generate code coverage for PLT

name: PLT Build and Test

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository, including submodules
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # Install dependencies
      - name: Install dependencies
        run: |
          set -e
          sudo apt-get update -y
          sudo apt-get install -y --no-install-recommends \
            libsfml-dev \
            libboost-test-dev \
            libmicrohttpd-dev \
            libxml2-dev \
            xvfb \
            lcov \
            gcovr

      # Install and switch to GCC 12
      - name: Switch to GCC 12
        run: |
          set -e
          sudo apt-get install -y gcc-12 g++-12
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 100 \
            --slave /usr/bin/g++ g++ /usr/bin/g++-12 \
            --slave /usr/bin/gcov gcov /usr/bin/gcov-12
          sudo update-alternatives --set gcc /usr/bin/gcc-12
          gcc --version

      # Prepare build directory and configure with CMake
      - name: Prepare build directory
        run: |
          set -e
          mkdir -p build
          cd build
          cmake -DBOOST_ROOT=${BOOST_ROOT:-/usr/include/boost} -DBoost_ARCHITECTURE=-x64 ..

      # Compile the project
      - name: Compile the project
        run: |
          set -e
          make -C build -j$(nproc)

      # Run tests
      - name: Run tests
        run: |
          set -e
          xvfb-run make -C build check

      # Generate code coverage
      - name: Generate code coverage report
        run: |
          set -e
          xvfb-run make -C build code-coverage

      # Generate code coverage XML report
      - name: Generate code coverage XML
        run: |
          set -e
          xvfb-run make -C build code-coverage-gcov

      # Add a coverage summary
      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: build/code-coverage-gcov.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '0 50'

      # Add a comment with coverage results to the PR
      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md
